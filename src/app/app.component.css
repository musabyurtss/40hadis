/*
<section id="..." class="Page">
    <main class="_Layout"></main>
</section>
  */

@import "../styles/variables.css";
:host {
  & .Page {
    /*background-image'i inline style olarak html de yada sayfaya özel css dosyasında ver.*/
    position: relative;
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    background-attachment: fixed;
    &>._Layout {
      width: 100%;
      max-width: calc((var(--Card-Width) + var(--DefaultMargin) * 2) * 3);
      min-width: calc(var(--Card-Width) + var(--DefaultMargin) * 2);
      margin: 0 auto;
      padding: calc(var(--DefaultMargin) * (3 + 2)) 0;
      position: relative;
    }
  }
}

 .overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(248, 245, 243, 0.64);
  z-index: 99999;
}

/*
.cssload-container{
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 99999;
}
	
.cssload-whirlpool,
.cssload-whirlpool::before,
.cssload-whirlpool::after {
	position: absolute;
	top: 50%;
	left: 50%;
	border: 1px solid rgb(204,204,204);
	border-left-color: rgb(0,0,0);
	border-radius: 974px;
		-o-border-radius: 974px;
		-ms-border-radius: 974px;
		-webkit-border-radius: 974px;
		-moz-border-radius: 974px;
}

.cssload-whirlpool {
	margin: -24px 0 0 -24px;
	height: 49px;
	width: 49px;
	animation: cssload-rotate 1150ms linear infinite;
		-o-animation: cssload-rotate 1150ms linear infinite;
		-ms-animation: cssload-rotate 1150ms linear infinite;
		-webkit-animation: cssload-rotate 1150ms linear infinite;
		-moz-animation: cssload-rotate 1150ms linear infinite;
}

.cssload-whirlpool::before {
	content: "";
	margin: -22px 0 0 -22px;
	height: 43px;
	width: 43px;
	animation: cssload-rotate 1150ms linear infinite;
		-o-animation: cssload-rotate 1150ms linear infinite;
		-ms-animation: cssload-rotate 1150ms linear infinite;
		-webkit-animation: cssload-rotate 1150ms linear infinite;
		-moz-animation: cssload-rotate 1150ms linear infinite;
}

.cssload-whirlpool::after {
	content: "";
	margin: -28px 0 0 -28px;
	height: 55px;
	width: 55px;
	animation: cssload-rotate 2300ms linear infinite;
		-o-animation: cssload-rotate 2300ms linear infinite;
		-ms-animation: cssload-rotate 2300ms linear infinite;
		-webkit-animation: cssload-rotate 2300ms linear infinite;
		-moz-animation: cssload-rotate 2300ms linear infinite;
}



@keyframes cssload-rotate {
	100% {
		transform: rotate(360deg);
	}
}

@-o-keyframes cssload-rotate {
	100% {
		-o-transform: rotate(360deg);
	}
}

@-ms-keyframes cssload-rotate {
	100% {
		-ms-transform: rotate(360deg);
	}
}

@-webkit-keyframes cssload-rotate {
	100% {
		-webkit-transform: rotate(360deg);
	}
}

@-moz-keyframes cssload-rotate {
	100% {
		-moz-transform: rotate(360deg);
	}
} */



:root {
  --size: 4.5em;
  --shadowcolor: #bbb;
}

.Loader {
  background-color: rgba(251, 251, 251, 0.95);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;left: 0;
  z-index: 9999;
  display: none;
  &._Active {
    display: block;
  }
  & > ._Spinner {
  position: absolute;
  top: 50%;left:50%;
  transform: translatex(-50%) translatey(-50%);

    width: var(--size);
    height: var(--size);
    line-height: var(--size);
    text-align: center;
    border-radius: var(--size);
    background: #fff;
    
    animation-name: loader;
    animation-duration: .75s;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
  
   
  }
}


@keyframes loader {
 /* or use transform: rotate(X(deg|turn|...)) */

25% {
  box-shadow: calc(var(--size) * .05) 0 calc(var(--size) * .075) .015rem var(--shadowcolor);
}
50% {
  box-shadow: 0 calc(var(--size) * .05) calc(var(--size) * .075) .015rem var(--shadowcolor);
}
75% {
  box-shadow: calc(var(--size) * -.05) 0 calc(var(--size) * .075) .015rem var(--shadowcolor);
}
0%,100% {
  box-shadow: 0 calc(var(--size) * -.05) calc(var(--size) * .075) .015rem var(--shadowcolor);
}
}


/* 
body {
  background-color: #eee;
  font-size: 16px;
}

.Loader {
  position: absolute;
  top: 50%;left:50%;
  z-index: 999999;
  transform: translatex(-50%) translatey(-50%);
} */